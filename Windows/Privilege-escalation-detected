# üõ°Ô∏è Playbook: Privilege Escalation Detected (with Lateral Movement Investigation)

**Filename:** `playbook-privilege-escalation-detected.md`  
**Category:** Endpoint / Post-Exploitation Detection  
**Use Case:** Investigating alerts raised when a user or process attempts to escalate privileges on a host (Windows/Linux), including follow-on checks for lateral movement.

---

## üéØ Alert Context ‚Äî Why this matters
Privilege escalation allows attackers to move from a **low-privileged user** to **administrator / SYSTEM / root**.  
- **Impact:** Full control of the system, ability to disable defenses, steal credentials, and pivot.  
- **Common attacker behavior:** PrivEsc is often followed by **lateral movement** to spread across the network.  

‚ö†Ô∏è PrivEsc alerts must be treated as **high severity** ‚Äî even failed attempts may reveal compromise attempts.

**Relevant Detection Sources:**
- Sysmon (Windows Event IDs 1, 3, 8, 10, 11)  
- Windows Security logs (4688, 4624, 4648, 4672, 4697)  
- EDR/XDR telemetry (Defender, CrowdStrike, SentinelOne, etc.)  
- Linux auditd / journald logs  
- Firewall and network logs (for RDP, SMB, WinRM, SSH)

---

## üß≠ Analyst Actions (L1 ‚Üí L2 ‚Üí L3)

### L1 ‚Äî Initial Triage
- ‚úÖ Identify alert source (EDR, SIEM, IDS).  
- ‚úÖ Capture details: host, user, source process, target process, timestamp.  
- ‚úÖ Confirm if escalation attempt **succeeded or failed**.  
- ‚úÖ Determine whether host is critical (DC, production server).  
- üö© Escalate to L2 if:
  - Escalation succeeded.  
  - Admin/SYSTEM/root account targeted.  
  - Source process is suspicious (`powershell.exe`, `cmd.exe`, `python.exe`, `mshta.exe`).  

**SPL ‚Äî Quick triage (elevated process creation)**
```spl
index=wineventlog EventCode=4688
| eval elevated=if(IntegrityLevel="High" OR IntegrityLevel="System","Yes","No")
| search elevated="Yes"
| table _time host User ProcessName CommandLine ParentProcessName elevated


‚∏ª

L2 ‚Äî Deep Investigation

1. Process Lineage
	‚Ä¢	Review parent/child process chain for the escalated process.

index=sysmon EventCode=1 host=<HOST> ProcessId=<SourceProcessId>
| table _time Image CommandLine ParentImage ParentCommandLine User IntegrityLevel

2. PrivEsc Techniques
	‚Ä¢	UAC bypass: fodhelper.exe, eventvwr.exe, sdclt.exe.
	‚Ä¢	Service abuse: new services/scheduled tasks.
	‚Ä¢	Token manipulation: SeDebugPrivilege.
	‚Ä¢	Driver exploits.

index=sysmon EventCode=10 TargetImage="*lsass.exe"
| table _time SourceImage TargetImage GrantedAccess CallTrace

3. Account Context
	‚Ä¢	Was a normal user suddenly performing privileged actions?
	‚Ä¢	Correlate with logon events.

index=wineventlog (EventCode=4624 OR EventCode=4648) host=<HOST> 
| search TargetUserName=<User>
| table _time TargetUserName LogonType IpAddress AuthenticationPackageName


‚∏ª

L2 ‚Äî Lateral Movement Checks

After PrivEsc, always check for signs of pivoting:

A) Suspicious Logons From Host
	‚Ä¢	Check if the escalated account accessed other systems.

index=wineventlog EventCode=4624 host!=<ORIGINAL_HOST>
| search AccountName=<EscalatedUser>
| table _time host AccountName LogonType IpAddress AuthenticationPackageName

B) Remote Admin Tool Usage
	‚Ä¢	PsExec, WMI, WinRM, RDP, schtasks.

index=sysmon EventCode=1 host=<ORIGINAL_HOST>
| search Image IN ("*psexec.exe","*wmic.exe","*schtasks.exe","*winrm*","*mstsc.exe")
| table _time host User Image CommandLine ParentImage

C) Lateral Network Connections
	‚Ä¢	Outbound SMB, RDP, SSH from compromised host.

index=sysmon EventCode=3 host=<ORIGINAL_HOST>
| search dest_port IN (445,3389,5985,5986,22)
| table _time host ProcessName dest_ip dest_port Protocol

D) Credential Dumping Indicators
	‚Ä¢	LSASS access (Sysmon 10) or suspicious DLL loads (Sysmon 11).

index=sysmon EventCode=10 TargetImage="*lsass.exe" host=<ORIGINAL_HOST>
| table _time SourceImage TargetImage GrantedAccess

E) Kerberos Abuse / Pass-the-Hash
	‚Ä¢	Abnormal Kerberos tickets (4769, 4624 with NTLM).

‚∏ª

L3 ‚Äî Confirm & Respond

If Malicious (True Positive):
	‚Ä¢	üõë Contain
	‚Ä¢	Isolate host.
	‚Ä¢	Suspend/kill malicious process.
	‚Ä¢	üîé Eradicate
	‚Ä¢	Collect forensic evidence (memory, binaries).
	‚Ä¢	Remove persistence (services, scheduled tasks).
	‚Ä¢	üîÅ Recover
	‚Ä¢	Reimage/rebuild system.
	‚Ä¢	Reset compromised credentials.
	‚Ä¢	Monitor for lateral movement across network.

If Benign (False Positive):
	‚Ä¢	‚úÖ Legitimate admin or security tool activity.
	‚Ä¢	‚úÖ Document and whitelist expected behaviors.

‚∏ª

üß© MITRE ATT&CK Mapping
	‚Ä¢	Privilege Escalation
	‚Ä¢	T1068 ‚Äì Exploitation for Privilege Escalation
	‚Ä¢	T1548 ‚Äì Abuse Elevation Control Mechanism (UAC bypass)
	‚Ä¢	T1134 ‚Äì Access Token Manipulation
	‚Ä¢	Credential Access
	‚Ä¢	T1003 ‚Äì OS Credential Dumping (LSASS, SAM, DPAPI)
	‚Ä¢	Lateral Movement
	‚Ä¢	T1021 ‚Äì Remote Services (SMB, RDP, SSH, WinRM)
	‚Ä¢	T1077 ‚Äì Windows Admin Shares
	‚Ä¢	T1075 ‚Äì Pass the Hash
	‚Ä¢	T1550 ‚Äì Use of Stolen Tokens

‚∏ª

üìù Root Cause Analysis (RCA) Template

1) Executive Summary
	‚Ä¢	What happened: Privilege escalation attempt detected on host <X>.
	‚Ä¢	Impact: <Succeeded | Failed>.
	‚Ä¢	Disposition: <True Positive | False Positive>.

2) Timeline
	‚Ä¢	T0: Alert triggered.
	‚Ä¢	T1: PrivEsc process lineage reviewed.
	‚Ä¢	T2: Account/logon correlation checked.
	‚Ä¢	T3: Lateral movement investigation (network + logons).
	‚Ä¢	T4: Containment/remediation actions taken.

3) Root Cause
	‚Ä¢	[Exploit | Misuse | Legitimate admin activity | Security agent behavior].

4) Scope
	‚Ä¢	Hosts, accounts affected, lateral movement evidence.

5) Actions Taken
	‚Ä¢	Containment, eradication, recovery.

6) Preventive Measures
	‚Ä¢	Patching, least privilege, disabling local admin, lateral segmentation.

7) Lessons Learned
	‚Ä¢	Improve correlation between PrivEsc + lateral movement in SIEM.

‚∏ª

üõ° Recommendations
	‚Ä¢	Immediate
	‚Ä¢	Isolate affected host.
	‚Ä¢	Block malicious binaries.
	‚Ä¢	Reset affected accounts.
	‚Ä¢	Hardening
	‚Ä¢	Patch OS & drivers.
	‚Ä¢	Restrict local admin rights.
	‚Ä¢	Disable NTLM, enforce SMB signing, deploy LSA protection.
	‚Ä¢	Segment network to block workstation-to-workstation RDP/SMB.
	‚Ä¢	Monitoring
	‚Ä¢	Alert on:
	‚Ä¢	UAC bypass binaries (fodhelper.exe, eventvwr.exe, etc.)
	‚Ä¢	New services/scheduled tasks from non-admins.
	‚Ä¢	Outbound SMB/RDP from workstations.
	‚Ä¢	LSASS access attempts.
	‚Ä¢	Baseline legitimate security tools to reduce noise.
	‚Ä¢	Process
	‚Ä¢	Maintain playbooks linking PrivEsc to Lateral Movement.
	‚Ä¢	Use honeytoken accounts for credential theft detection.

‚∏ª

üìé Before Escalating to Customer

Provide:
	‚Ä¢	Host, user, timestamp of PrivEsc attempt.
	‚Ä¢	Process lineage and command line.
	‚Ä¢	Whether escalation succeeded.
	‚Ä¢	Lateral movement evidence (new logons, SMB/RDP/WinRM/SSH).
	‚Ä¢	TI results for involved binaries.
	‚Ä¢	Recommendations for containment and hardening.
